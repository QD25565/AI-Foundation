name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy bandit
    
    - name: Run flake8
      continue-on-error: true
      run: |
        echo "Running flake8 linter..."
        # Check for critical errors first
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Then run full linting (continue on error for now)
        flake8 src/ --count --exit-zero --max-complexity=15 --max-line-length=120 --statistics \
          --ignore=E501,W503,E203,E402 \
          --exclude=__pycache__,*.pyc,models/
    
    - name: Check formatting with black
      continue-on-error: true
      run: |
        echo "Checking code formatting with black..."
        black --check --diff src/ --line-length 120 --extend-exclude "models/"
    
    - name: Check import ordering with isort
      continue-on-error: true
      run: |
        echo "Checking import ordering with isort..."
        isort --check-only --diff src/ --profile black --line-length 120
    
    - name: Type checking with mypy
      continue-on-error: true
      run: |
        echo "Running mypy type checker..."
        mypy src/ --ignore-missing-imports --no-error-summary || true
    
    - name: Security check with bandit
      continue-on-error: true
      run: |
        echo "Running bandit security linter..."
        bandit -r src/ -ll -i -x "*/test_*.py,*/tests/*" || true

  complexity:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install analysis tools
      run: |
        python -m pip install --upgrade pip
        pip install radon xenon
    
    - name: Cyclomatic complexity with radon
      continue-on-error: true
      run: |
        echo "Analyzing cyclomatic complexity..."
        radon cc src/ -s -a --total-average
    
    - name: Maintainability index
      continue-on-error: true
      run: |
        echo "Calculating maintainability index..."
        radon mi src/ -s
    
    - name: Check complexity thresholds
      continue-on-error: true
      run: |
        echo "Checking complexity thresholds..."
        xenon --max-absolute B --max-modules B --max-average A src/ || true

  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install documentation tools
      run: |
        python -m pip install --upgrade pip
        pip install pydocstyle interrogate
    
    - name: Check docstrings with pydocstyle
      continue-on-error: true
      run: |
        echo "Checking docstring conventions..."
        pydocstyle src/ --ignore=D100,D101,D102,D103,D104,D105,D106,D107,D203,D213 || true
    
    - name: Check documentation coverage
      continue-on-error: true
      run: |
        echo "Checking documentation coverage..."
        interrogate src/ -v --fail-under 50 || true
